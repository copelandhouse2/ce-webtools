{"version":3,"sources":["../../controllers/ClientController.js"],"names":["list","request","response","getClients","err","rows","fields","console","log","json","show","getClientByID","params","id","create","addClient","body","result","insertId","update","updateClient","updateId","remove","deleteClient"],"mappings":";;;;;;;AAAA;;;;;;AAEA;AACO,IAAMA,sBAAO,SAAPA,IAAO,CAACC,OAAD,EAAUC,QAAV,EAAuB;;AAEzC,wBAAYC,UAAZ,CAAuB,UAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4B;AACjD,QAAI,CAACF,GAAL,EAAU;AACRG,cAAQC,GAAR,CAAY,2BAAZ;AACA,aAAON,SAASO,IAAT,CAAcJ,IAAd,CAAP;AACD,KAHD,MAIK;AACHE,cAAQC,GAAR,CAAY,+BAAZ;AACA,aAAON,SAASO,IAAT,CAAcL,GAAd,CAAP;AACD;AACF,GATD;AAUD,CAZM;;AAcP;AACO,IAAMM,sBAAO,SAAPA,IAAO,CAACT,OAAD,EAAUC,QAAV,EAAuB;;AAEzC,wBAAYS,aAAZ,CAA0BV,QAAQW,MAAR,CAAeC,EAAzC,EAA6C,UAAST,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4B;AACvE,QAAI,CAACF,GAAL,EAAU;AACRG,cAAQC,GAAR,CAAY,yBAAZ;AACA,aAAON,SAASO,IAAT,CAAcJ,KAAK,CAAL,CAAd,CAAP;AACD,KAHD,MAIK;AACHE,cAAQC,GAAR,CAAY,+BAAZ;AACA,aAAON,SAASO,IAAT,CAAcL,GAAd,CAAP;AACD;AACF,GATD;AAUD,CAZM;;AAcP;AACO,IAAMU,0BAAS,SAATA,MAAS,CAACb,OAAD,EAAUC,QAAV,EAAuB;;AAE3C,wBAAYa,SAAZ,CAAsBd,QAAQe,IAA9B,EAAoC,UAASZ,GAAT,EAAca,MAAd,EAAsB;AACxD,QAAIb,GAAJ,EAAS,OAAOF,SAASO,IAAT,CAAcL,GAAd,CAAP;AACT,WAAOF,SAASO,IAAT,CAAcQ,OAAOC,QAArB,CAAP;AACD,GAHD;AAID,CANM;;AAQP;AACO,IAAMC,0BAAS,SAATA,MAAS,CAAClB,OAAD,EAAUC,QAAV,EAAuB;;AAE3C,wBAAYkB,YAAZ,CAAyBnB,QAAQe,IAAjC,EAAuC,UAASZ,GAAT,EAAca,MAAd,EAAsB;AAC3D,QAAIb,GAAJ,EAAS,OAAOF,SAASO,IAAT,CAAcL,GAAd,CAAP;AACT,WAAOF,SAASO,IAAT,CAAcQ,OAAOI,QAArB,CAAP;AACD,GAHD;AAID,CANM;;AAQP;AACO,IAAMC,0BAAS,SAATA,MAAS,CAACrB,OAAD,EAAUC,QAAV,EAAuB;;AAE3C,wBAAYqB,YAAZ,CAAyBtB,QAAQW,MAAR,CAAeC,EAAxC,EAA4C,UAAST,GAAT,EAAca,MAAd,EAAsB;AAChE,QAAIb,GAAJ,EAAS,OAAOF,SAASO,IAAT,CAAcL,GAAd,CAAP;AACT,WAAOF,SAASO,IAAT,CAAc,cAAd,CAAP;AACD,GAHD;AAID,CANM","file":"ClientController.js","sourceRoot":"./src","sourcesContent":["import ClientModel from \"../models/ClientModel\";\r\n\r\n// function to get the list of cities.\r\nexport const list = (request, response) => {\r\n\r\n  ClientModel.getClients(function(err, rows, fields) {\r\n    if (!err) {\r\n      console.log('Data retrieved... clients');\r\n      return response.json(rows);\r\n    }\r\n    else {\r\n      console.log('Error while performing Query.');\r\n      return response.json(err);\r\n    }\r\n  });\r\n}\r\n\r\n// function to get one city.\r\nexport const show = (request, response) => {\r\n\r\n  ClientModel.getClientByID(request.params.id, function(err, rows, fields) {\r\n    if (!err) {\r\n      console.log('Data retrieved... yeah!');\r\n      return response.json(rows[0]);\r\n    }\r\n    else {\r\n      console.log('Error while performing Query.');\r\n      return response.json(err);\r\n    }\r\n  });\r\n}\r\n\r\n// function to add a city.\r\nexport const create = (request, response) => {\r\n\r\n  ClientModel.addClient(request.body, function(err, result) {\r\n    if (err) return response.json(err);\r\n    return response.json(result.insertId);\r\n  });\r\n}\r\n\r\n// function to update a city.\r\nexport const update = (request, response) => {\r\n\r\n  ClientModel.updateClient(request.body, function(err, result) {\r\n    if (err) return response.json(err);\r\n    return response.json(result.updateId);\r\n  });\r\n}\r\n\r\n// function to delete a city.\r\nexport const remove = (request, response) => {\r\n\r\n  ClientModel.deleteClient(request.params.id, function(err, result) {\r\n    if (err) return response.json(err);\r\n    return response.json(\"city deleted\");\r\n  });\r\n}"]}