{"version":3,"sources":["../../models/CityModel.js"],"names":["CityModel","getCities","callback","SQLstmt","query","getCityByID","id","addCity","city","values","state_prov","country","created_by","last_updated_by","deleteCity","updateCity"],"mappings":";;;;;;AAAA;;AAEA,IAAMA,YAAY;AAChBC,aAAW,mBAASC,QAAT,EAAmB;AAC5B;AACA,QAAMC,UAAU,gGACZ,gBADY,GAEZ,iDAFY,GAGZ,8CAHY,GAIZ,gBAJJ;AAKA,WAAO,oBAAMC,KAAN,CAAYD,OAAZ,EAAqBD,QAArB,CAAP;AACD,GATe;;AAWhBG,eAAa,qBAASC,EAAT,EAAaJ,QAAb,EAAsB;AACjC,QAAMC,UAAU,yCACZ,yBADJ;AAEA,WAAO,oBAAMC,KAAN,CAAYD,OAAZ,EAAqB,CAACG,EAAD,CAArB,EAA2BJ,QAA3B,CAAP;AACD,GAfe;;AAiBhB;AACA;AACAK,WAAS,iBAASC,IAAT,EAAeN,QAAf,EAAwB;AAC/B,QAAMC,UAAU,uBACZ,+DADY,GAEZ,2BAFY,GAGZ,qFAHJ;AAIA,QAAMM,SAAS,CAACD,KAAKF,EAAN,EAAUE,KAAKA,IAAf,EAAqBA,KAAKE,UAA1B,EAAsCF,KAAKG,OAA3C,EAAoDH,KAAKI,UAAzD,EAAqEJ,KAAKK,eAA1E,EACbL,KAAKA,IADQ,EACFA,KAAKE,UADH,EACeF,KAAKG,OADpB,EAC6BH,KAAKK,eADlC,CAAf;AAEA;AACA;AACA,WAAO,oBAAMT,KAAN,CAAYD,OAAZ,EAAqBM,MAArB,EAA6BP,QAA7B,CAAP;AACD,GA7Be;;AA+BhBY,cAAY,oBAASR,EAAT,EAAaJ,QAAb,EAAsB;AAChC,QAAMC,UAAU,iCAAhB;AACA,WAAO,oBAAMC,KAAN,CAAYD,OAAZ,EAAqB,CAACG,EAAD,CAArB,EAA2BJ,QAA3B,CAAP;AACD,GAlCe;;AAoChB;AACAa,cAAY,oBAASP,IAAT,EAAeN,QAAf,EAAwB;AAClC,QAAMC,UAAU,2FAAhB;AACA,QAAMM,SAAS,CAACD,KAAKA,IAAN,EAAYA,KAAKE,UAAjB,EAA6BF,KAAKG,OAAlC,EAA2CH,KAAKK,eAAhD,EAAiEL,KAAKF,EAAtE,CAAf;AACA,WAAO,oBAAMF,KAAN,CAAYD,OAAZ,EAAqBM,MAArB,EAA6BP,QAA7B,CAAP;AACD;AAzCe,CAAlB;;kBA4CeF,S;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CityModel.js","sourceRoot":"./src","sourcesContent":["import { sql } from \"../mysqldb\";\r\n\r\nconst CityModel = { \r\n  getCities: function(callback) {\r\n    // const SQLstmt = 'select id, city, state_prov, country from cities';\r\n    const SQLstmt = 'select c.id, c.city, c.state_prov, l1.name state_prov_long, c.country, l2.name country_long'\r\n      + ' from cities c'\r\n      + ' left join lookups l1 on c.state_prov = l1.code'\r\n      + ' left join lookups l2 on c.country = l2.code'\r\n      + ' order by c.id';\r\n    return sql().query(SQLstmt, callback);\r\n  },\r\n\r\n  getCityByID: function(id, callback){\r\n    const SQLstmt = 'select id, city, state_prov, country'\r\n      + ' from cities where id=?';\r\n    return sql().query(SQLstmt, [id], callback);\r\n  },\r\n\r\n  // This function handles BOTH ADD and UPDATE.\r\n  // Basically an UPSERT feature.\r\n  addCity: function(city, callback){\r\n    const SQLstmt = 'insert into cities'\r\n      + ' (id, city, state_prov, country, created_by, last_updated_by)'\r\n      + ' values(?, ?, ?, ?, ?, ?)'\r\n      + ' on duplicate key update city = ?, state_prov = ?, country = ?, last_updated_by = ?';\r\n    const values = [city.id, city.city, city.state_prov, city.country, city.created_by, city.last_updated_by,\r\n      city.city, city.state_prov, city.country, city.last_updated_by];\r\n    // console.log(\"City Obj\", city);\r\n    // console.log(\"SQL\", SQLstmt)\r\n    return sql().query(SQLstmt, values, callback);\r\n  },\r\n\r\n  deleteCity: function(id, callback){\r\n    const SQLstmt = 'delete from cities where id = ?';\r\n    return sql().query(SQLstmt, [id], callback);\r\n  },\r\n\r\n  // right now, not using.  Leveraging the upsert functionality MySQL has.  See add.\r\n  updateCity: function(city, callback){\r\n    const SQLstmt = 'update cities set city = ?, state_prov = ?, country = ?, last_updated_by = ? where id = ?';\r\n    const values = [city.city, city.state_prov, city.country, city.last_updated_by, city.id];\r\n    return sql().query(SQLstmt, values, callback);\r\n  }\r\n};\r\n\r\nexport default CityModel;\r\n\r\n// ,\r\n// getTaskById: function(id, callback){\r\n//   return db.query(\"select * from task where Id=?\",[id],callback);\r\n// },\r\n// addTask: function(Task, callback){\r\n//   return db.query(\"Insert into task values(?,?,?)\",[Task.Id,Task.Title,Task.Status],callback);\r\n// },\r\n// deleteTask: function(id, callback){\r\n//   return db.query(\"delete from task where Id=?\",[id],callback);\r\n// },\r\n// updateTask: function(id, Task, callback){\r\n//   return db.query(\"update task set Title=?,Status=? where Id=?\",[Task.Title,Task.Status,id],callback);\r\n// }"]}