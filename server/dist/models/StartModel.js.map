{"version":3,"sources":["../../models/StartModel.js"],"names":["StartModel","getStarts","callback","SQLstmt","query","getStartByID","id","addStart","start","job_number","client_id","client","owner_id","city","subdivision","address1","address2","phase","section","lot","block","fnd_height_fr","fnd_height_fl","fnd_height_rr","fnd_height_rl","plan_type","elevation","masonry","garage_type","garage_entry","garage_swing","garage_drop","garage_extension","covered_patio","bay_window","master_shower_drop","bath1_shower_drop","bath2_shower_drop","bath3_shower_drop","additional_options","comments","created_by","last_updated_by","values","deleteStart","updateStart"],"mappings":"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","file":"StartModel.js","sourceRoot":"./src","sourcesContent":["import { sql } from \"../mysqldb\";\r\n\r\nconst StartModel = { \r\n  getStarts: function(callback) {\r\n    // const SQLstmt = 'select id, city, state_prov, country from cities';\r\n    const SQLstmt = 'SELECT id, job_number, client_id, user_id, city, subdivision, address1, address2'\r\n      + ' from starts';\r\n    return sql().query(SQLstmt, callback);\r\n  },\r\n\r\n  getStartByID: function(id, callback){\r\n    const SQLstmt = 'SELECT id, job_number, client_id, user_id, city, subdivision, address1, address2'\r\n      + ' from starts'\r\n      + ' where id = ?';\r\n    return sql().query(SQLstmt, [id], callback);\r\n  },\r\n\r\n  // This function handles BOTH ADD and UPDATE.\r\n  // Basically an UPSERT feature.\r\n  addStart: function(start, callback){\r\n\r\n  //inserting into mysql\r\n  const { job_number, client_id, client, owner_id, city, subdivision, address1, address2, phase, section, lot, block\r\n    , fnd_height_fr, fnd_height_fl, fnd_height_rr, fnd_height_rl, plan_type, elevation, masonry, garage_type\r\n    , garage_entry, garage_swing, garage_drop, garage_extension, covered_patio, bay_window, master_shower_drop\r\n    , bath1_shower_drop, bath2_shower_drop, bath3_shower_drop, additional_options, comments, created_by, last_updated_by } = start;\r\n\r\n  const values = [job_number, client_id, owner_id, city, subdivision, address1, address2, phase, section, lot, block\r\n    , fnd_height_fr, fnd_height_fl, fnd_height_rr, fnd_height_rl, plan_type, elevation, masonry, garage_type\r\n    , garage_entry, garage_swing, garage_drop, garage_extension, covered_patio, bay_window, master_shower_drop\r\n    , bath1_shower_drop, bath2_shower_drop, bath3_shower_drop, additional_options, comments, created_by, last_updated_by];\r\n\r\n  // console.log(\"job_number\", job_number);\r\n  // console.log(\"city\", city);\r\n  // console.log(\"user_id\", owner_id);\r\n\r\n  const SQLstmt = \"INSERT INTO starts (job_number, client_id, user_id, city, subdivision, address1, address2, phase, section\"\r\n  + \", lot, block, fnd_height_fr, fnd_height_fl, fnd_height_rr, fnd_height_rl, plan_type, elevation, masonry, garage_type\"\r\n  + \", garage_entry, garage_swing, garage_drop, garage_extension, covered_patio, bay_window, master_shower_drop\"\r\n  + \", bath1_shower_drop, bath2_shower_drop, bath3_shower_drop, additional_options, comments, created_by, last_updated_by)\"\r\n  + \" VALUES(?,?,?,?,?,?,?,?,?,? ,?,?,?,?,?,?,?,?,?,? ,?,?,?,?,?,?,?,?,?,? ,?,?,?)\";\r\n\r\n    return sql().query(SQLstmt, values, callback);\r\n  },\r\n\r\n  deleteStart: function(id, callback){\r\n    const SQLstmt = \"DELETE from starts where id = ?\";\r\n    // console.log(\"query\", SQLstmt);\r\n    return sql().query(SQLstmt, [id], callback);\r\n  },\r\n\r\n  // right now, not using.  Leveraging the upsert functionality MySQL has.  See add.\r\n  updateStart: function(city, callback){\r\n    const SQLstmt = 'update starts set 1=1';\r\n    const values = [];\r\n    return sql().query(SQLstmt, values, callback);\r\n  }\r\n};\r\n\r\nexport default StartModel;\r\n"]}